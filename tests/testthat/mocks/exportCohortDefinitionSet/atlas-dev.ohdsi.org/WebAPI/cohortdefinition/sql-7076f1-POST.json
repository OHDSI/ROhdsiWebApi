{
    "templateSql": "CREATE TABLE #Codesets (\r\n  codeset_id int NOT NULL,\r\n  concept_id bigint NOT NULL\r\n)\r\n;\r\n\r\n\r\n\r\n\r\nwith primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as\r\n(\r\n-- Begin Primary Events\r\nselect P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id\r\nFROM\r\n(\r\n  select E.person_id, E.start_date, E.end_date,\r\n         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,\r\n         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id\r\n  FROM \r\n  (\r\n  -- Begin Condition Occurrence Criteria\r\nSELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,\r\n  C.visit_occurrence_id, C.condition_start_date as sort_date\r\nFROM \r\n(\r\n  SELECT co.* \r\n  FROM @cdm_database_schema.CONDITION_OCCURRENCE co\r\n  \r\n) C\r\nJOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id\r\nWHERE (YEAR(C.condition_start_date) - P.year_of_birth >= 6 and YEAR(C.condition_start_date) - P.year_of_birth <= 7)\r\n-- End Condition Occurrence Criteria\r\n\r\n  ) E\r\n\tJOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date\r\n  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE\r\n) P\r\nWHERE P.ordinal = 1\r\n-- End Primary Events\r\n\r\n)\r\nSELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id\r\nINTO #qualified_events\r\nFROM \r\n(\r\n  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id\r\n  FROM primary_events pe\r\n  \r\n) QE\r\n\r\n;\r\n\r\n--- Inclusion Rule Inserts\r\n\r\ncreate table #inclusion_events (inclusion_rule_id bigint,\n\tperson_id bigint,\n\tevent_id bigint\n);\r\n\r\nwith cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as\r\n(\r\n  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal\r\n  from\r\n  (\r\n    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask\r\n    from #qualified_events Q\r\n    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id\r\n    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date\r\n  ) MG -- matching groups\r\n\r\n)\r\nselect event_id, person_id, start_date, end_date, op_start_date, op_end_date\r\ninto #included_events\r\nFROM cteIncludedEvents Results\r\nWHERE Results.ordinal = 1\r\n;\r\n\r\n\r\n\r\n-- generate cohort periods into #final_cohort\r\nwith cohort_ends (event_id, person_id, end_date) as\r\n(\r\n\t-- cohort exit dates\r\n  -- By default, cohort exit at the event's op end date\nselect event_id, person_id, op_end_date as end_date from #included_events\r\n),\r\nfirst_ends (person_id, start_date, end_date) as\r\n(\r\n\tselect F.person_id, F.start_date, F.end_date\r\n\tFROM (\r\n\t  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal \r\n\t  from #included_events I\r\n\t  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date\r\n\t) F\r\n\tWHERE F.ordinal = 1\r\n)\r\nselect person_id, start_date, end_date\r\nINTO #cohort_rows\r\nfrom first_ends;\r\n\r\nwith cteEndDates (person_id, end_date) AS -- the magic\r\n(\t\r\n\tSELECT\r\n\t\tperson_id\r\n\t\t, DATEADD(day,-1 * 0, event_date)  as end_date\r\n\tFROM\r\n\t(\r\n\t\tSELECT\r\n\t\t\tperson_id\r\n\t\t\t, event_date\r\n\t\t\t, event_type\r\n\t\t\t, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal \r\n\t\t\t, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord\r\n\t\tFROM\r\n\t\t(\r\n\t\t\tSELECT\r\n\t\t\t\tperson_id\r\n\t\t\t\t, start_date AS event_date\r\n\t\t\t\t, -1 AS event_type\r\n\t\t\t\t, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal\r\n\t\t\tFROM #cohort_rows\r\n\t\t\r\n\t\t\tUNION ALL\r\n\t\t\r\n\r\n\t\t\tSELECT\r\n\t\t\t\tperson_id\r\n\t\t\t\t, DATEADD(day,0,end_date) as end_date\r\n\t\t\t\t, 1 AS event_type\r\n\t\t\t\t, NULL\r\n\t\t\tFROM #cohort_rows\r\n\t\t) RAWDATA\r\n\t) e\r\n\tWHERE (2 * e.start_ordinal) - e.overall_ord = 0\r\n),\r\ncteEnds (person_id, start_date, end_date) AS\r\n(\r\n\tSELECT\r\n\t\t c.person_id\r\n\t\t, c.start_date\r\n\t\t, MIN(e.end_date) AS end_date\r\n\tFROM #cohort_rows c\r\n\tJOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date\r\n\tGROUP BY c.person_id, c.start_date\r\n)\r\nselect person_id, min(start_date) as start_date, end_date\r\ninto #final_cohort\r\nfrom cteEnds\r\ngroup by person_id, end_date\r\n;\r\n\r\nDELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;\r\nINSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)\r\nselect @target_cohort_id as cohort_definition_id, person_id, start_date, end_date \nFROM #final_cohort CO\r\n;\r\n\r\n\r\n-- BEGIN: Censored Stats\r\n\r\ndelete from @results_database_schema.cohort_censor_stats where cohort_definition_id = @target_cohort_id;\r\n\r\n-- END: Censored Stats\r\n\r\n\r\n\r\n\r\n\r\nTRUNCATE TABLE #cohort_rows;\r\nDROP TABLE #cohort_rows;\r\n\r\nTRUNCATE TABLE #final_cohort;\r\nDROP TABLE #final_cohort;\r\n\r\nTRUNCATE TABLE #inclusion_events;\r\nDROP TABLE #inclusion_events;\r\n\r\nTRUNCATE TABLE #qualified_events;\r\nDROP TABLE #qualified_events;\r\n\r\nTRUNCATE TABLE #included_events;\r\nDROP TABLE #included_events;\r\n\r\nTRUNCATE TABLE #Codesets;\r\nDROP TABLE #Codesets;\r\n"
}
